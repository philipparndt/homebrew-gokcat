# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gokcat < Formula
  desc "Command-line tool for consuming Kafka topics"
  homepage "https://github.com/philipparndt/gokcat"
  version "8.0.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/gokcat/releases/download/v8.0.1/gokcat_darwin_x86_64.tar.gz"
      sha256 "c4228afb8f321a99145b1fb7eb5040bdf34ebdb06bb3ca122d15fe1b349aaa68"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/gokcat/releases/download/v8.0.1/gokcat_darwin_arm64.tar.gz"
      sha256 "b3a7ab4ea5a18ffd3a61de2c1a68ca0e885b5af68920410882468f3ccaa5048d"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v8.0.1/gokcat_linux_x86_64.tar.gz"
      sha256 "464ed30e5cb47a0cb38a45d249ba2d1f1fbe35a7cfe67a7ad6547a2bba32974b"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v8.0.1/gokcat_linux_arm64.tar.gz"
      sha256 "e5c637af651d7c7471eefacff15b2ac4953a4e8c3f9b10252cde23c40e9a91b3"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using gokcat.
    EOS
  end
end
