# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gokcat < Formula
  desc "Command-line tool for consuming Kafka topics"
  homepage "https://github.com/philipparndt/gokcat"
  version "0.8.2"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.8.2/gokcat_darwin_x86_64.tar.gz"
      sha256 "948c351533feb16186d8b1d272e9e917e29e797000aeaeeee761cec18cb70649"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.8.2/gokcat_darwin_arm64.tar.gz"
      sha256 "940c6ec42ef37c6f54faa9e72656f86716d1ce0d2aedf1ea8fc0da19466fb4a2"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.8.2/gokcat_linux_x86_64.tar.gz"
      sha256 "e26814ceb8184fb745146cc323f0f9aa341553b76f7f12514d9040b41ad28e13"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.8.2/gokcat_linux_arm64.tar.gz"
      sha256 "314c819350cb18a87ef12f2389d724cb00790bb0ead7b88cdc658ebc5cf03727"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using gokcat.
    EOS
  end
end
