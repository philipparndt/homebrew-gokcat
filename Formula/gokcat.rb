# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gokcat < Formula
  desc "Command-line tool for consuming Kafka topics"
  homepage "https://github.com/philipparndt/gokcat"
  version "0.7.2"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.7.2/gokcat_darwin_x86_64.tar.gz"
      sha256 "3b66c06b92747834d0820f004401206fade46788999851c20472a75e0da07c73"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.7.2/gokcat_darwin_arm64.tar.gz"
      sha256 "c44f4254911e373d364e3a87037a64134e4579d2aae15c12d4d3ffb15ca4be47"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.7.2/gokcat_linux_x86_64.tar.gz"
      sha256 "115648f24329c1a41c569c5821defd047dae6ae0a13aabfd5c866e0f1ac45952"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.7.2/gokcat_linux_arm64.tar.gz"
      sha256 "46571f327610230eea05541d4e4a7ab7f68c38909176be549bb4f8c6ba3bf46d"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using gokcat.
    EOS
  end
end
