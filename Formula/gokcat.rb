# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gokcat < Formula
  desc "Command-line tool for consuming Kafka topics"
  homepage "https://github.com/philipparndt/gokcat"
  version "0.6.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.6.0/gokcat_darwin_x86_64.tar.gz"
      sha256 "4a09831ab54380cb4d6914db9b018f1fb76299b6354907cd1447ea6094975aec"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.6.0/gokcat_darwin_arm64.tar.gz"
      sha256 "a05b3dd8fc850a10035770bc12d3112b806b20cbe473449a564226940f9bddb5"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.6.0/gokcat_linux_x86_64.tar.gz"
      sha256 "d7ff3732a4be37f2bf789ca92564b4caa96b17e058ab0735476beb6897a8b512"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.6.0/gokcat_linux_arm64.tar.gz"
      sha256 "b1bec263b7f562994292ab321a01507747b262dcc46e297a0229b9cd0f29fec7"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using gokcat.
    EOS
  end
end
