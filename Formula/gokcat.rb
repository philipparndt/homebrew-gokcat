# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Gokcat < Formula
  desc "Command-line tool for consuming Kafka topics"
  homepage "https://github.com/philipparndt/gokcat"
  version "0.1.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.1.0/gokcat_darwin_x86_64.tar.gz"
      sha256 "20b4b7ed736dfd54772bd72826c15263a1be73bda8a7c5f3549364e2df91f283"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.1.0/gokcat_darwin_arm64.tar.gz"
      sha256 "b55a6bb41420763338d72f2f9c5eda444ef19c469b44284e37c56c8b427e3e48"

      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.1.0/gokcat_linux_x86_64.tar.gz"
      sha256 "d042748684ac337bd4e6ae5ff5258f85743a1aeb2b099727fc5ddc2e8132745b"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/philipparndt/gokcat/releases/download/v0.1.0/gokcat_linux_arm64.tar.gz"
      sha256 "60fcddb841b2502da303a5dd3fb33d90984166010d57c9e82fe8c3113ff75ace"
      def install
        bin.install "gokcat"

        begin
          bash_output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/gokcat completion bash")
          (bash_completion/"gokcat").write bash_output
        rescue => e
          opoo "Failed to install bash completion: #{e}"
        end

        begin
          zsh_output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/gokcat completion zsh")
          (zsh_completion/"_gokcat").write zsh_output
        rescue => e
          opoo "Failed to install zsh completion: #{e}"
        end

        begin
          fish_output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/gokcat completion fish")
          (fish_completion/"gokcat.fish").write fish_output
        rescue => e
          opoo "Failed to install fish completion: #{e}"
        end
      end
    end
  end

  def caveats
    <<~EOS
      Run using gokcat.
    EOS
  end
end
